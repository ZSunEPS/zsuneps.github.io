<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="https://zsuneps.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://zsuneps.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-02-21T21:50:48+00:00</updated><id>https://zsuneps.github.io/feed.xml</id><title type="html">blank</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">Weighted Least Squares (WLS)</title><link href="https://zsuneps.github.io/blog/2020/WLS/" rel="alternate" type="text/html" title="Weighted Least Squares (WLS)"/><published>2020-01-03T00:00:00+00:00</published><updated>2020-01-03T00:00:00+00:00</updated><id>https://zsuneps.github.io/blog/2020/WLS</id><content type="html" xml:base="https://zsuneps.github.io/blog/2020/WLS/"><![CDATA[<h2 id="introduction">Introduction</h2> <p>Weighted least squares (WLS), also known as weighted linear regression, is a generalization of ordinary least squares (OLS) and linear regression in which knowledge of the unequal variance of observations (heteroscedasticity) is incorporated into the regression. WLS is also a specialization of generalized least squares, when all the off-diagonal entries of the covariance matrix of the errors are null. The model under consideration is</p> \[\mathbf{Y} = \mathbf{A}\boldsymbol{\beta} + \epsilon^{*}\] \[\begin{pmatrix} y_{1}\\ y_{2}\\ \vdots\\ y_{n} \end{pmatrix} = \begin{pmatrix} 1 &amp; x_{1} \\ 1 &amp; x_{2} \\ \vdots &amp; \vdots \\ 1 &amp; x_{n} \end{pmatrix} \begin{pmatrix} \beta_{0}\\ \beta_{1} \end{pmatrix}+\epsilon^{*}\] <p>where \(\epsilon^{*}\) is assumed to be (multivariate) normally distributed with mean vector \(\mathbf{0}\) and nonconstant variance-covariance matrix \(\boldsymbol{\Omega}\). This assumption is expressed as</p> \[\text{E}(\epsilon^{*})=\mathbf{0}, \qquad \text{Var}(\epsilon^{*})=\boldsymbol{\Omega}=\begin{pmatrix} \sigma_{1}^{2} &amp; 0 &amp; \dots &amp; 0\\ 0 &amp; \sigma_{2}^{2} &amp; \dots &amp; 0\\ \vdots &amp; \vdots &amp; \ddots &amp; \vdots\\ 0 &amp; 0 &amp; \dots &amp; \sigma_{n}^{2} \end{pmatrix}\] <p>We define the reciprocal of each variance, \(\sigma_{i}^{2}\), as the weight, \(w_{i}=1/\sigma_{i}^{2}\), then let matrix \(\mathbf{W}\) be a diagonal matrix containing these weights:</p> \[\mathbf{W} = \begin{pmatrix} w_{1} &amp; 0 &amp; \dots &amp; 0\\ 0 &amp; w_{2} &amp; \dots &amp; 0\\ \vdots &amp; \vdots &amp; \ddots &amp; \vdots\\ 0 &amp; 0 &amp; \dots &amp; w_{n} \end{pmatrix} = \begin{pmatrix} 1/\sigma_{1}^{2} &amp; 0 &amp; \dots &amp; 0\\ 0 &amp; 1/\sigma_{2}^{2} &amp; \dots &amp; 0\\ \vdots &amp; \vdots &amp; \ddots &amp; \vdots\\ 0 &amp; 0 &amp; \dots &amp; 1/\sigma_{n}^{2} \end{pmatrix}\] <p>The weighted least squares estimate is then</p> \[\hat{\beta}_{WLS}={\underset {\boldsymbol {\beta }}{\operatorname {arg\ min} }}\,\sum _{i=1}^{n}\epsilon_{i}^{*2}=(\mathbf{A^{\textsf{T}}WA})^{-1}\mathbf{A^{\textsf{T}}WY}\] <h2 id="formulation">Formulation</h2> <p>The fit of a model to a data point is measured by its residual, \(r_{i}\), defined as the difference between a measured value of the dependent variable, \(y_{i}\) and the value predicted by the model, \(f(x_{i},{\boldsymbol {\beta }})\):</p> \[r_{i}(\boldsymbol {\beta}) = y_{i}-f(x_{i}, \boldsymbol{\beta})\] <p>If the errors are uncorrelated and have equal variance, then the (cost) function</p> \[SE(\boldsymbol{\beta}) = \sum _{i}r_{i}^{2}(\boldsymbol{\beta})\] <p>is minimized at \(\hat{\boldsymbol{\beta}}\), such that \(\frac{\partial SE}{\partial \beta_{j}}(\hat{\boldsymbol{\beta}})=0\). Aitken showed that when a weighted sum of squared residuals is minimized, \({\hat {\boldsymbol {\beta }}}\) is the best linear unbiased estimator (BLUE) if each weight is equal to the reciprocal of the variance of the measurement</p> \[SE = \sum _{i=1}^{n}W_{i}r_{i}^{2},\qquad W_{i} = \frac{1}{\sigma_{i}^{2}}\] <p>Let the first derivate of this sum of squares equal to zero</p> \[\sum _{i=1}^{n}\sum _{k=1}^{m}W_{i}\frac{\partial f(x_{i}, \boldsymbol{\beta})}{\partial \beta_{j}}r_{i}=0,\qquad k = 1, 2, ...,m\] <p>which, in a linear least squares system give the modified normal equations</p> \[\sum _{i=1}^{n}A_{i}W_{i}y_{i}=\sum _{i=1}^{n}\sum _{k=1}^{m}A_{i}W_{i}A_{i}\hat{\beta}_{k}\] <p>When the observational errors (y errors) are uncorrelated and the weight matrix, \(\mathbf{W}\), is diagonal, these may be written as</p> \[\mathbf{A^{\textsf{T}}WY} = (\mathbf{A^{\textsf{T}}WA})\boldsymbol{\beta}\] <p>Thus, the solution of \(\boldsymbol{\beta}\) is</p> \[\hat{\beta}_{WLS}=(\mathbf{A^{\textsf{T}}WA})^{-1}\mathbf{A^{\textsf{T}}WY}\] <p>If we use the matrix form, we can write the sum of squared residuals as</p> \[SE(\boldsymbol{\beta})=\sum_{i=1}^{n}w_{i}(Y_{i}-\mathbf{A}_{i}\boldsymbol{\beta})^{2}\] <p>where \(\mathbf{A}_{i}\) is the \(i^{th}\) row of \(\mathbf{A}\). Because we write \(\mathbf{W}\) for the matrix with the \(w_{i}\) on the diagonal and zeros everywhere else, then</p> \[\begin{aligned} SE(\boldsymbol{\beta}) &amp; = (\mathbf{Y-A\boldsymbol{\beta}})^{\textsf{T}}\mathbf{W}(\mathbf{Y-A\boldsymbol{\beta}})\\ &amp; = \mathbf{Y}^{\textsf{T}}\mathbf{WY}-\mathbf{Y}^{\textsf{T}}\mathbf{WA\boldsymbol{\beta}}-\boldsymbol{\beta}^{\textsf{T}}\mathbf{A}^{\textsf{T}}\mathbf{WY} + \boldsymbol{\beta}^{\textsf{T}}\mathbf{A}^{\textsf{T}}\mathbf{WA\boldsymbol{\beta}} \end{aligned}\] <p>Differentiating with respect to \(\boldsymbol{\beta}\), we get the gradient as</p> \[\nabla _{\boldsymbol{\beta}}SE = 2(-\mathbf{A}^{\textsf{T}}\mathbf{WY}+\mathbf{A}^{\textsf{T}}\mathbf{WA}\boldsymbol{\beta})\] <p>Setting this to zero at the optimum and solving,</p> \[\hat{\beta}_{WLS}=(\mathbf{A^{\textsf{T}}WA})^{-1}\mathbf{A^{\textsf{T}}WY}\] <h2 id="codes-in-julia">Codes in Julia</h2> <p>We can write several lines of Julia codes to solve \(\boldsymbol{\beta}\) for a weighted least squares linear regression with the form \(y=\beta_{1}x+\beta_{0}\)</p> <figure class="highlight"><pre><code class="language-julia" data-lang="julia">  <span class="k">using</span> <span class="n">LinearAlgebra</span><span class="x">,</span> <span class="n">Random</span>
  <span class="n">rng1</span> <span class="o">=</span> <span class="kt">MersenneTwister</span><span class="x">(</span><span class="mi">1234</span><span class="x">)</span>
  <span class="n">x</span> <span class="o">=</span> <span class="x">[</span><span class="mf">1.0</span><span class="x">,</span> <span class="mf">3.0</span><span class="x">,</span> <span class="mf">7.0</span><span class="x">,</span> <span class="mf">13.0</span><span class="x">,</span> <span class="mf">19.0</span><span class="x">,</span> <span class="mf">24.0</span><span class="x">]</span>
  <span class="n">y</span> <span class="o">=</span> <span class="mf">2.0</span> <span class="o">.*</span> <span class="n">x</span> <span class="o">.+</span> <span class="mf">3.0</span> <span class="o">.+</span> <span class="n">randn</span><span class="x">(</span><span class="n">rng1</span><span class="x">,</span> <span class="mi">6</span><span class="x">)</span> <span class="c"># y = 2x + 3 + ϵ</span>
  <span class="n">rng2</span> <span class="o">=</span> <span class="kt">MersenneTwister</span><span class="x">(</span><span class="mi">4321</span><span class="x">)</span>
  <span class="n">σ</span> <span class="o">=</span> <span class="n">abs</span><span class="o">.</span><span class="x">(</span><span class="n">randn</span><span class="x">(</span><span class="n">rng2</span><span class="x">,</span> <span class="mi">6</span><span class="x">))</span>
  <span class="n">W</span> <span class="o">=</span> <span class="kt">Diagonal</span><span class="x">(</span><span class="mi">1</span> <span class="o">./</span> <span class="n">σ</span><span class="o">.^</span><span class="mi">2</span><span class="x">)</span>
  <span class="n">A</span> <span class="o">=</span> <span class="x">[[</span><span class="mf">1.0</span> <span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="n">x</span><span class="x">]</span> <span class="n">x</span><span class="x">]</span>
  <span class="n">β</span> <span class="o">=</span> <span class="n">inv</span><span class="x">(</span><span class="n">A</span><span class="err">'</span> <span class="o">*</span> <span class="n">W</span> <span class="o">*</span> <span class="n">A</span><span class="x">)</span> <span class="o">*</span> <span class="n">A</span><span class="err">'</span> <span class="o">*</span> <span class="n">W</span> <span class="o">*</span> <span class="n">y</span> <span class="c"># β = [β0, β1], where β0 is intercept and β1 is the slope.</span></code></pre></figure> <figure class="highlight"><pre><code class="language-julia" data-lang="julia"><span class="mi">2</span><span class="o">-</span><span class="n">element</span> <span class="kt">Vector</span><span class="x">{</span><span class="kt">Float64</span><span class="x">}</span><span class="o">:</span>
 <span class="mf">3.261206161053625</span>
 <span class="mf">2.001618372891876</span></code></pre></figure> <p>In this simple case, <code class="language-plaintext highlighter-rouge">x</code> is the independent variable (e.g., temperature, pressure, etc.) whose uncertainty is ignored here. <code class="language-plaintext highlighter-rouge">y</code> is the dependent variable or observation, and its uncertainty is the measurement uncertainty (e.g., one standard error, 1SE, of multiple replicates of one sample).</p>]]></content><author><name>Zeyang Sun</name></author><category term="math"/><category term="regression"/><summary type="html"><![CDATA[Handy notes on the weighted least squres linear regression]]></summary></entry></feed>